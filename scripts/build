#!/usr/bin/php
<?php
/**
 * Usage:
 *  ./build 1.0-alpha8
 */

require_once('scripts.settings.php');
main($argv);

/**
 * 
 */
function main($argv) {
  $conf = _scripts_conf($argv);
  
  $version = $conf->version;
  $drupal_version = $conf->drupal_version;
  $my_profile = $conf->my_profile;
  $profile_name = $conf->profile_name;
  $path = $conf->path;
  $docroot = $conf->docroot;
  $profile = $conf->profile;
  $build_make = $conf->build_make;

  printf("\n\nRebuild %s %s-%s...\n\n", $profile_name, $drupal_version, $version);

  $commands = array(
    'rm -rf docroot',                  // Remove old code base.
    sprintf('drush make %s docroot', $build_make),  // Build new distro.
    sprintf('rm %s/.gitignore;', $profile),  // Remove .gitignore from d.o.
    'rm -rf docroot/sites',     // Get rid of default sites directory.
    sprintf('cd %s; ln -s ../sites/ sites; cd %s;', $docroot, $path), // Set up simlink to /sites.
    sprintf('ls -l %s/sites', $docroot), // Make sure the simlink is set up correctly.
    'git checkout docroot/.ah_site_archive_imported',
    'git add . ',
    'git status ',
    '# Resolve any conflicts before committing.',
    sprintf('git commit -m "Update %s to version %s-%s"', $profile_name, $drupal_version, $version),
    sprintf('git tag -a %s-%s -m "Update %s to version %s-%s"', $drupal_version, $version, $profile_name, $drupal_version, $version),
  );

  foreach($commands as $command) {
    //execute_command($command);
    print $command . "\n";
  }

}

/**
 * Execute command and print results.
 * 
 * @param $command
 *  String. Command to be run from the command line.
 */
function execute_command($command) {
  echo "\nRunning:\n\t$command\n";
  shell_exec($command);
  // $result = exec($command, $output);
  // printf("result: %s\n\n", print_r($result));
  // printf("output: %s\n\n", print_r($output));
}

